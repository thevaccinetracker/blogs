{"componentChunkName":"component---src-templates-blog-template-js","path":"/fast-exponentiation","result":{"data":{"site":{"siteMetadata":{"title":"Blogs"}},"markdownRemark":{"html":"<p>This concept is used to optimise the time complexity of finding a<sup>b</sup> from O(b) to O(log<sub>2</sub> b).</p>\n<h1>Bruteforce</h1>\n<p>The naive method of finding a<sup>b</sup> takes O(b) unit time as </p>\n<p>a<sup>b</sup> = a*a*a*a*a......a (b times)</p>\n<p>Iterative approach</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">power</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        ans <span class=\"token operator\">*=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Recursive approach</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">power</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> <span class=\"token function\">power</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Thus it will takes O(b) unit time.</p>\n<h1>Fast method</h1>\n<p>This method takes O(log b) unit time to compute a<sup>b</sup>.</p>\n<p>We can say, if b is even, a<sup>b</sup> = (a<sup>b/2</sup>)<sup>2</sup></p>\n<p>If b is odd, a<sup>b</sup> = a * (a<sup>b/2</sup>)<sup>2</sup>.</p>\n<h3>How it takes O(log b) time</h3>\n<p><strong>b</strong> is getting reduced to <strong>b/2</strong>, and this redution will be done till <strong>b</strong> reaches <strong>1</strong>.</p>\n<p>Example -> 8 -> 4 -> 2 -> 1.</p>\n<p>Since 8 = 2<sup>3</sup>, it takes 3 steps to become 1.</p>\n<p>Earlier it was getting reduced like, 8 -> 7 -> 6 .... 1, which was taking O(8) time.</p>\n<p>Now it is taking O(3) time which is O(log<sub>2</sub> 8) time.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">fastPower</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Base case</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Computing a^(b/2)</span>\n    <span class=\"token keyword\">int</span> smallAns <span class=\"token operator\">=</span> <span class=\"token function\">power</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    smallAns <span class=\"token operator\">*=</span> smallAns<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// If b is odd, a^b = a * (a^(b/2))^2</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        smallAns <span class=\"token operator\">*=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> smallAns<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Hope it Helps</p>\n<p>Thanks for reading</p>","frontmatter":{"date":"June 21, 2020","path":"/fast-exponentiation","title":"Fast Exponentiation - CP","thumbnail":"","metaDescription":"Fast exponentiation in competitive coding"}}},"pageContext":{}}}